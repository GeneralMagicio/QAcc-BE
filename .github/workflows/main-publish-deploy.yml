name: publish-deploy-main-branch

on:
  workflow_dispatch:

jobs:
  run-linters:
    name: Run linters
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 20.11.0

      # ESLint and Prettier must be in `package.json`
      - name: Install Node.js dependencies
        run: npm ci

      - name: Run linters
        uses: wearerequired/lint-action@v2
        with:
          eslint: true
          #prettier: true
          continue_on_error: true

  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ghcr.io/generalmagicio/qacc-be:main

  deploy:
    needs: publish
    runs-on: ubuntu-latest
    steps:
      - name: SSH and Redeploy
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.PRODUCTION_HOST }}
          username: ${{ secrets.PRODUCTION_USERNAME }}
          key: ${{ secrets.PRODUCTION_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd QAcc-BE
            git reset --hard HEAD~1
            git checkout main
            git pull origin main
            docker image prune -a --force
            docker compose pull

  rollout-deploy-1:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: SSH and Redeploy
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.PRODUCTION_HOST }}
          username: ${{ secrets.PRODUCTION_USERNAME }}
          key: ${{ secrets.PRODUCTION_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd QAcc-BE
            ## Update each backend service one by one
            ## First Deployment
            docker compose up -d --no-deps --scale qacc-be-graph-ql1=0
            docker compose up -d --no-deps --scale qacc-be-job1=0
            docker compose up --force-recreate -d qacc-be-graph-ql1
            docker compose up --force-recreate -d qacc-be-job1

            # Wait for qacc-be-graph-ql1 to be healthy (timeout after 5 minutes)
            echo "Waiting for qacc-be-graph-ql1 to become healthy..."
            timeout 300 bash -c 'until [ "$(docker inspect --format="{{json .State.Health.Status}}" qacc-be-graph-ql1)" == "\"healthy\"" ]; do echo "Waiting for qacc-be-graph-ql1 to be healthy..."; sleep 5; done'
            if [ $? -eq 124 ]; then
                echo "Timeout waiting for qacc-be-graph-ql1 to become healthy"
                exit 1
            fi
            # Check if qacc-be-graph-ql1 is healthy
            if [ "$(docker inspect --format='{{json .State.Health.Status}}' qacc-be-graph-ql1)" != "\"healthy\"" ]; then
                echo "qacc-be-graph-ql1 is not healthy, stopping deployment"
                exit 1
            fi
            # Check if qacc-be-job1 is running
            if [ "$(docker inspect --format='{{json .State.Status}}' qacc-be-job1)" != "\"running\"" ]; then
                echo "qacc-be-job1 is not running, stopping deployment"
                exit 1
            fi
            echo "First deployment phase completed successfully"

  rollout-deploy-2:
    needs: rollout-deploy-1
    runs-on: ubuntu-latest
    steps:
      - name: SSH and Redeploy
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.PRODUCTION_HOST }}
          username: ${{ secrets.PRODUCTION_USERNAME }}
          key: ${{ secrets.PRODUCTION_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd QAcc-BE
            ## Second Deployment
            docker compose up -d --no-deps --scale qacc-be-graph-ql2=0
            docker compose up -d --no-deps --scale qacc-be-job2=0
            docker compose up --force-recreate -d qacc-be-graph-ql2
            docker compose up --force-recreate -d qacc-be-job2

            # Wait for qacc-be-graph-ql2 to be healthy (timeout after 5 minutes)
            echo "Waiting for qacc-be-graph-ql2 to become healthy..."
            timeout 300 bash -c 'until [ "$(docker inspect --format="{{json .State.Health.Status}}" qacc-be-graph-ql2)" == "\"healthy\"" ]; do echo "Waiting for qacc-be-graph-ql2 to be healthy..."; sleep 5; done'
            if [ $? -eq 124 ]; then
                echo "Timeout waiting for qacc-be-graph-ql2 to become healthy"
                exit 1
            fi
            # Check if qacc-be-graph-ql2 is healthy
            if [ "$(docker inspect --format='{{json .State.Health.Status}}' qacc-be-graph-ql2)" != "\"healthy\"" ]; then
                echo "qacc-be-graph-ql2 is not healthy, stopping deployment"
                exit 1
            fi
            # Check if qacc-be-job2 is running
            if [ "$(docker inspect --format='{{json .State.Status}}' qacc-be-job2)" != "\"running\"" ]; then
                echo "qacc-be-job2 is not running, stopping deployment"
                exit 1
            fi
            echo "Second deployment phase completed successfully"

  rollout-deploy-3:
    needs: rollout-deploy-2
    runs-on: ubuntu-latest
    steps:
      - name: SSH and Redeploy
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.PRODUCTION_HOST }}
          username: ${{ secrets.PRODUCTION_USERNAME }}
          key: ${{ secrets.PRODUCTION_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd QAcc-BE
            ## Third Deployment
            docker compose up -d --no-deps --scale qacc-be-graph-ql3=0
            docker compose up -d --no-deps --scale qacc-be-job3=0
            docker compose up --force-recreate -d qacc-be-graph-ql3
            docker compose up --force-recreate -d qacc-be-job3

            # Wait for qacc-be-graph-ql3 to be healthy (timeout after 5 minutes)
            echo "Waiting for qacc-be-graph-ql3 to become healthy..."
            timeout 300 bash -c 'until [ "$(docker inspect --format="{{json .State.Health.Status}}" qacc-be-graph-ql3)" == "\"healthy\"" ]; do echo "Waiting for qacc-be-graph-ql3 to be healthy..."; sleep 5; done'
            if [ $? -eq 124 ]; then
                echo "Timeout waiting for qacc-be-graph-ql3 to become healthy"
                exit 1
            fi
            # Check if qacc-be-graph-ql3 is healthy
            if [ "$(docker inspect --format='{{json .State.Health.Status}}' qacc-be-graph-ql3)" != "\"healthy\"" ]; then
                echo "qacc-be-graph-ql3 is not healthy, stopping deployment"
                exit 1
            fi
            # Check if qacc-be-job3 is running
            if [ "$(docker inspect --format='{{json .State.Status}}' qacc-be-job3)" != "\"running\"" ]; then
                echo "qacc-be-job3 is not running, stopping deployment"
                exit 1
            fi
            echo "First deployment phase completed successfully"